<!-- views/index.ejs -->

<!DOCTYPE html>
<html lang="en">
<head>
    <% include head %>
    <link rel="stylesheet" href="/stylesheets/createEvent.css"/>
    <title>To infinity</title>

</head>
<body>

<header>
    <% include nav %>
</header>

<div class="container">
    <div class="card"></div>
    <div class="card">
        <h1 class="title">Create an Amazing Event!</h1>
        <form ref='uploadForm'
              id='uploadForm'
              action='/createEvent'
              method='post'
              encType="multipart/form-data">

        <div class="input-container">
                <input type="text" id="title" name="title" required="required"/>
                <label for="#{label}">Title</label>
                <div class="bar"></div>
            </div>
            <div class="input-container">
                <input type="text" id="description" name="description" required="required"/>
                <label for="#{label}">Description</label>
                <div class="bar"></div>
            </div>
            <div class="input-container">
                <input type="text" id="searchTextField"  autocomplete="on" name="location" required="required"/>
                <label for="#{label}">City</label>
                <div class="bar"></div>
            </div>
            <div class="input-container">
                <label for="#{label}">Address</label>
            </div>
            <!--google xxdd-->
            <div class="container" style="margin-top:100px;">

                <div class="pac-card" id="pac-card">
                    <div>
                        <div id="type-selector" class="pac-controls">
                            <input type="radio" name="type" id="changetype-all" checked="checked">
                            <label for="changetype-all">All</label>

                            <input type="radio" name="type" id="changetype-establishment">
                            <label for="changetype-establishment">Establishments</label>

                            <input type="radio" name="type" id="changetype-address">
                            <label for="changetype-address">Addresses</label>

                            <input type="radio" name="type" id="changetype-geocode">
                            <label for="changetype-geocode">Geocodes</label>
                        </div>
                        <div id="strict-bounds-selector" class="pac-controls">
                            <input type="checkbox" id="use-strict-bounds" value="">
                            <label for="use-strict-bounds">Strict Bounds</label>
                        </div>
                    </div>
                    <div id="pac-container">
                        <input id="pac-input" type="text"
                               placeholder="Enter a location">
                    </div>
                </div>
                <div id="map"></div>
                <div id="infowindow-content">
                    <img src="" width="16" height="16" id="place-icon">
                    <span id="place-name"  class="title"></span><br>
                    <span id="place-address"></span>
                </div>

                <script>
                    function initialize() {
                        var options = {
                            types: ['(cities)']
                        };
                        var input = document.getElementById('searchTextField');
                        var autocomplete = new google.maps.places.Autocomplete(input, options);
                        var input = document.getElementById('searchTextField').placeholder=" ";
                    }

                    function initMap() {

                        initialize();
                        var map = new google.maps.Map(document.getElementById('map'), {
                            center: {lat: -33.8688, lng: 151.2195},
                            zoom: 13
                        });
                        var card = document.getElementById('pac-card');
                        var input = document.getElementById('pac-input');
                        var types = document.getElementById('type-selector');
                        var strictBounds = document.getElementById('strict-bounds-selector');

                        map.controls[google.maps.ControlPosition.TOP_RIGHT].push(card);

                        var autocomplete = new google.maps.places.Autocomplete(input);

                        // Bind the map's bounds (viewport) property to the autocomplete object,
                        // so that the autocomplete requests use the current map bounds for the
                        // bounds option in the request.
                        autocomplete.bindTo('bounds', map);

                        var infowindow = new google.maps.InfoWindow();
                        var infowindowContent = document.getElementById('infowindow-content');
                        infowindow.setContent(infowindowContent);
                        var marker = new google.maps.Marker({
                            map: map,
                            anchorPoint: new google.maps.Point(0, -29)
                        });

                        autocomplete.addListener('place_changed', function() {
                            infowindow.close();
                            marker.setVisible(false);
                            var place = autocomplete.getPlace();





                            if (!place.geometry) {
                                document.getElementById('subButton').disabled = true;
                                // User entered the name of a Place that was not suggested and
                                // pressed the Enter key, or the Place Details request failed.
                                window.alert("No details available for input: '" + place.name + "'");
                                return;
                            }else{
                                document.getElementById('eventlong').value = place.geometry.location.lng();
                                document.getElementById('eventlat').value =place.geometry.location.lat();
                                document.getElementById('subButton').disabled = false;
                            }

                            // If the place has a geometry, then present it on a map.
                            if (place.geometry.viewport) {
                                map.fitBounds(place.geometry.viewport);
                            } else {
                                map.setCenter(place.geometry.location);
                                map.setZoom(17);  // Why 17? Because it looks good.
                            }
                            marker.setPosition(place.geometry.location);


                            marker.setVisible(true);

                            var address = '';

                            if (place.address_components) {
                                address = [
                                    (place.address_components[0] && place.address_components[0].short_name || ''),
                                    (place.address_components[1] && place.address_components[1].short_name || ''),
                                    (place.address_components[2] && place.address_components[2].short_name || '')
                                ].join(' ');
                            }

                            infowindowContent.children['place-icon'].src = place.icon;
                            infowindowContent.children['place-name'].textContent = place.name;
                            infowindowContent.children['place-address'].textContent = address;
                            infowindow.open(map, marker);
                        });

                        // Sets a listener on a radio button to change the filter type on Places
                        // Autocomplete.
                        function setupClickListener(id, types) {
                            var radioButton = document.getElementById(id);
                            radioButton.addEventListener('click', function() {
                                autocomplete.setTypes(types);
                            });
                        }

                        setupClickListener('changetype-all', []);
                        setupClickListener('changetype-address', ['address']);
                        setupClickListener('changetype-establishment', ['establishment']);
                        setupClickListener('changetype-geocode', ['geocode']);

                        document.getElementById('use-strict-bounds')
                            .addEventListener('click', function() {
                                console.log('Checkbox clicked! New state=' + this.checked);
                                autocomplete.setOptions({strictBounds: this.checked});
                            });
                    }
                </script>
                <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyD1--POJ59u8OwyG0bkRsf21BHAgPU5dDw&libraries=places&callback=initMap"
                        async defer></script>

            </div>


            <input type="hidden" id="eventlong" name="eventlong" value=" " required="required"/>
            <input type="hidden" id="eventlat" name="eventlat" value=" " required="required"/>
            <div class="input-container">
                <input type="text" id="prefLang" name="prefLang" required="required"/>
                <label for="#{label}">Pref Language</label>
                <div class="bar"></div>
            </div>



            <div>
                <div class="input-file-container" style="margin-left:50%">
                    <input  style="margin-left:-130px;" class="input-file" id="img" type="file" name="img">
                    <label style="margin-left:-130px;" tabindex="0" for="my-file" class="input-file-trigger">Select a file...</label>
                </div>
                <p class="file-return"></p>










                <div class="input-file-container" style="margin-left:50%">
                    <div class="button-container" style="margin-left:-265px;">
                        <button disabled type="submit" form="uploadForm" value="Submit" id="subButton"><span>Create</span></button>
                    </div>
                </div>
            </div>



        </form>
    </div>

</div>



<footer>
    <% include footer %>
</footer>



<script>
    document.querySelector("html").classList.add('js');

    var fileInput  = document.querySelector( ".input-file" ),
        button     = document.querySelector( ".input-file-trigger" ),
        the_return = document.querySelector(".file-return");

    button.addEventListener( "keydown", function( event ) {
        if ( event.keyCode == 13 || event.keyCode == 32 ) {
            fileInput.focus();
        }
    });
    button.addEventListener( "click", function( event ) {
        fileInput.focus();
        return false;
    });
    fileInput.addEventListener( "change", function( event ) {
        the_return.innerHTML = this.value;
    });
</script>

</body>
</html>
